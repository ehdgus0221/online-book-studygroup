spring:
  profiles:
    active: local

  data:
    web:
      pageable:
        max-page-size: 50
  jpa:
    hibernate:
      ddl-auto: create
      default_batch_fetch_size: 100

    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  datasource:
    driver-class-name: org.h2.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  h2:
    console:
      path: /h2-console
      enabled: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            scope:
              - account_email
              - profile_nickname
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-name: Kakao
            client-authentication-method: POST

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  redis:
    host: localhost
    port: 6379

redis:
  stock:
    prefix: stocks

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace

jwt:
  secret: ${JWT_SECRET}

  access:
    header: Authorization

  refresh:
    header: Authorization-refresh

cloud:
  aws:
    s3:
      bucket: ${AWS_S3_NAME}
    stack.auto: false
    region.static: ${AWS_REGION}
    credentials:
      accessKey: ${AWS_S3_ACCESS_KEY}
      secretKey: ${AWS_S3_SECRET_KEY}